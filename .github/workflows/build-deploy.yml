name: Build and Push Images

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      apps: ${{ steps.changes.outputs.apps }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - id: changes
        name: Detect changes
        shell: bash
        run: |
          CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD)
          echo "Changed files:"
          echo "$CHANGED_FILES"
          
          if echo "$CHANGED_FILES" | grep -q -E ".github|applications.yaml|k8s/|Dockerfile"; then
            echo "apps=[\"app1\",\"app2\",\"app3\",\"shell\"]" >> "$GITHUB_OUTPUT"
          else
            apps=()
          
            if echo "$CHANGED_FILES" | grep -q -E "client/app1/|server/app1/|libs/"; then
              apps+=("app1")
            fi
            if echo "$CHANGED_FILES" | grep -q -E "client/app2/|server/app2/|libs/"; then
              apps+=("app2")
            fi
            if echo "$CHANGED_FILES" | grep -q -E "client/app3/|server/app3/|libs/"; then
              apps+=("app3")
            fi
            if echo "$CHANGED_FILES" | grep -q -E "client/shell/|server/shell/|libs/"; then
              apps+=("shell")
            fi
          
            if [ ${#apps[@]} -eq 0 ]; then
              echo "apps=[]" >> "$GITHUB_OUTPUT"
            else
              json_array="[$(printf '"%s",' "${apps[@]}" | sed 's/,$/')]"
              echo "apps=$json_array" >> "$GITHUB_OUTPUT"
            fi
          fi

  build-and-push:
    needs: check-changes
    if: needs.check-changes.outputs.apps != '[]'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: ${{ fromJson(needs.check-changes.outputs.apps) }}
    steps:
      - uses: actions/checkout@v3

      - name: Login to Quay.io
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.ORGANIZATION }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Set port number
        id: set-port
        run: |
          if [ "${{ matrix.app }}" = "shell" ]; then
            echo "PORT=3000" >> $GITHUB_OUTPUT
          elif [ "${{ matrix.app }}" = "app1" ]; then
            echo "PORT=3001" >> $GITHUB_OUTPUT
          elif [ "${{ matrix.app }}" = "app2" ]; then
            echo "PORT=3002" >> $GITHUB_OUTPUT
          elif [ "${{ matrix.app }}" = "app3" ]; then
            echo "PORT=3003" >> $GITHUB_OUTPUT
          fi

      - name: Build and push image
        run: |
          echo "Building for app: ${{ matrix.app }}"
          
          docker build \
            --build-arg APP_NAME=${{ matrix.app }} \
            --build-arg PORT=${{ steps.set-port.outputs.PORT }} \
            -t "quay.io/dimitrovpetar36/${{ matrix.app }}:${{ github.sha }}" \
            -t "quay.io/dimitrovpetar36/${{ matrix.app }}:latest" \
            -f Dockerfile .
          
          docker push "quay.io/dimitrovpetar36/${{ matrix.app }}:${{ github.sha }}"
          docker push "quay.io/dimitrovpetar36/${{ matrix.app }}:latest"