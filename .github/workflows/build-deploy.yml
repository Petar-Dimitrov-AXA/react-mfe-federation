name: Build and Deploy to OpenShift

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [app1, app2, app3, shell]

    steps:
      - uses: actions/checkout@v3

      # Set up organization name with encoded special characters
      - name: Set organization name
        id: set-org
        run: |
          ORG="${{ secrets.ORGANIZATION }}"
          # First encode + to %2B, then encode _ to %5F
          ENCODED_ORG="${ORG//+/%2B}"
          ENCODED_ORG="${ENCODED_ORG//_/%5F}"
          echo "encoded_org=$ENCODED_ORG" >> $GITHUB_OUTPUT
          echo "Original org: $ORG"
          echo "Encoded org: $ENCODED_ORG"

      # Login using original organization name (with + and _)
      - name: Login to Quay.io
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.ORGANIZATION }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Set port number
        id: set-port
        run: |
          if [ "${{ matrix.app }}" = "shell" ]; then
            echo "PORT=3000" >> $GITHUB_OUTPUT
          elif [ "${{ matrix.app }}" = "app1" ]; then
            echo "PORT=3001" >> $GITHUB_OUTPUT
          elif [ "${{ matrix.app }}" = "app2" ]; then
            echo "PORT=3002" >> $GITHUB_OUTPUT
          elif [ "${{ matrix.app }}" = "app3" ]; then
            echo "PORT=3003" >> $GITHUB_OUTPUT
          fi

      - name: Build and push image
        run: |
          # Print variables for debugging
          echo "Building for app: ${{ matrix.app }}"
          echo "Using organization: ${{ steps.set-org.outputs.encoded_org }}"
          
          # Build the image using encoded organization name
          IMAGE_NAME="quay.io/${{ steps.set-org.outputs.encoded_org }}/${{ matrix.app }}:${{ github.sha }}"
          echo "Building image: $IMAGE_NAME"
          
          docker build \
            --build-arg APP_NAME=${{ matrix.app }} \
            --build-arg PORT=${{ steps.set-port.outputs.PORT }} \
            -t "$IMAGE_NAME" \
            -f Dockerfile.template .
          
          # Push the image
          docker push "$IMAGE_NAME"

      - name: Update Deployment
        run: |
          # Update image repository and tag in values.yaml
          yq eval ".image.repository = \"quay.io/${{ steps.set-org.outputs.encoded_org }}/${{ matrix.app }}\"" -i k8s/apps/${{ matrix.app }}/values.yaml
          yq eval ".image.tag = \"${{ github.sha }}\"" -i k8s/apps/${{ matrix.app }}/values.yaml
          
          # Commit and push the updated manifest
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add k8s/apps/${{ matrix.app }}/values.yaml
          git commit -m "Update ${{ matrix.app }} image tag to ${{ github.sha }}"
          git push