name: Build and Push Images

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      app1: ${{ steps.filter.outputs.app1 }}
      app2: ${{ steps.filter.outputs.app2 }}
      app3: ${{ steps.filter.outputs.app3 }}
      shell: ${{ steps.filter.outputs.shell }}
      build_all: ${{ steps.filter.outputs.build_all }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            build_all:
              - 'applications.yaml'
              - 'k8s/**'
              - 'Dockerfile'
            app1:
              - 'client/app1/**'
              - 'server/app1/**'
              - 'libs/**'
            app2:
              - 'client/app2/**'
              - 'server/app2/**'
              - 'libs/**'
            app3:
              - 'client/app3/**'
              - 'server/app3/**'
              - 'libs/**'
            shell:
              - 'client/shell/**'
              - 'server/shell/**'
              - 'libs/**'
  build-and-push:
    needs: detect-changes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [app1, app2, app3, shell]
    if: |
      needs.detect-changes.outputs[format('{0}', matrix.app)] == 'true' || 
      needs.detect-changes.outputs.build_all == 'true'
    steps:
      - uses: actions/checkout@v3

      - name: Login to Quay.io
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.ORGANIZATION }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Set port number
        id: set-port
        run: |
          if [ "${{ matrix.app }}" = "shell" ]; then
            echo "PORT=3000" >> $GITHUB_OUTPUT
          elif [ "${{ matrix.app }}" = "app1" ]; then
            echo "PORT=3001" >> $GITHUB_OUTPUT
          elif [ "${{ matrix.app }}" = "app2" ]; then
            echo "PORT=3002" >> $GITHUB_OUTPUT
          elif [ "${{ matrix.app }}" = "app3" ]; then
            echo "PORT=3003" >> $GITHUB_OUTPUT
          fi

      - name: Build and push image
        run: |
          echo "Building for app: ${{ matrix.app }}"
          
          docker build \
            --build-arg APP_NAME=${{ matrix.app }} \
            --build-arg PORT=${{ steps.set-port.outputs.PORT }} \
            -t "quay.io/dimitrovpetar36/${{ matrix.app }}:${{ github.sha }}" \
            -t "quay.io/dimitrovpetar36/${{ matrix.app }}:latest" \
            -f Dockerfile .
          
          docker push "quay.io/dimitrovpetar36/${{ matrix.app }}:${{ github.sha }}"
          docker push "quay.io/dimitrovpetar36/${{ matrix.app }}:latest"